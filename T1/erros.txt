gcc                      -c -o build/main.o src/main.c  -g -Wall 
gcc                      -c -o build/lexer.o src/lexer.c  -g -Wall 
src/lexer.c: In function ‘lexerInit’:
src/lexer.c:16:5: error: too few arguments to function ‘buildFinalStates’
   16 |     buildFinalStates(lexer->finalState);
      |     ^~~~~~~~~~~~~~~~
In file included from src/lexer.c:7:
src/../header/lexer.h:49:6: note: declared here
   49 | void buildFinalStates( bool finalState[NUMBER_OF_STATES], char finalStateClass );
      |      ^~~~~~~~~~~~~~~~
src/lexer.c:18:5: warning: implicit declaration of function ‘buildProtectedSymbolMatrix’; did you mean ‘builProtectedSymbolFinalStates’? [-Wimplicit-function-declaration]
   18 |     buildProtectedSymbolMatrix(lexer->protectedSymbolMatrix);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~
      |     builProtectedSymbolFinalStates
src/lexer.c: In function ‘fillWord’:
src/lexer.c:26:38: warning: array subscript has type ‘char’ [-Wchar-subscripts]
   26 |         protectedSymbolMatrix[0][word[0]] = firstState;
      |                                  ~~~~^~~
src/lexer.c:29:47: warning: array subscript has type ‘char’ [-Wchar-subscripts]
   29 |         protectedSymbolMatrix[firstState][word[i]] = firstState++;
      |                                           ~~~~^~~
src/lexer.c:29:64: warning: operation on ‘firstState’ may be undefined [-Wsequence-point]
   29 |         protectedSymbolMatrix[firstState][word[i]] = firstState++;
      |                                                      ~~~~~~~~~~^~
src/lexer.c: At top level:
src/lexer.c:32:6: warning: conflicting types for ‘buildProtectedSymbolMatrix’
   32 | void buildProtectedSymbolMatrix( char protectedSymbolMatrix[NUMBER_OF_STATES_PROTECTED_SYMBOLS][NUMBER_OF_LOWER_CASE_LETTERS] ){
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~
src/lexer.c:18:5: note: previous implicit declaration of ‘buildProtectedSymbolMatrix’ was here
   18 |     buildProtectedSymbolMatrix(lexer->protectedSymbolMatrix);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~
src/lexer.c: In function ‘buildProtectedSymbolMatrix’:
src/lexer.c:37:34: warning: array subscript has type ‘char’ [-Wchar-subscripts]
   37 |             protectedSymbolMatrix[i][j] = -1;
      |                                  ^
src/lexer.c:37:37: warning: array subscript has type ‘char’ [-Wchar-subscripts]
   37 |             protectedSymbolMatrix[i][j] = -1;
      |                                     ^
src/lexer.c: In function ‘fillOther’:
src/lexer.c:58:40: warning: array subscript has type ‘char’ [-Wchar-subscripts]
   58 |         if(transitionMatrix[startState][i] == -1)
      |                                        ^
src/lexer.c:59:41: warning: array subscript has type ‘char’ [-Wchar-subscripts]
   59 |             transitionMatrix[startState][i] = endState;
      |                                         ^
src/lexer.c: At top level:
src/lexer.c:67:6: error: conflicting types for ‘buildFinalStates’
   67 | void buildFinalStates( bool finalState[NUMBER_OF_STATES], char finalStateClass[NUMBER_OF_STATES] ) {
      |      ^~~~~~~~~~~~~~~~
In file included from src/lexer.c:7:
src/../header/lexer.h:49:6: note: previous declaration of ‘buildFinalStates’ was here
   49 | void buildFinalStates( bool finalState[NUMBER_OF_STATES], char finalStateClass );
      |      ^~~~~~~~~~~~~~~~
src/lexer.c: In function ‘buildFinalStates’:
src/lexer.c:77:29: warning: array subscript has type ‘char’ [-Wchar-subscripts]
   77 |         finalState[notFinals[i]] = 0;
      |                    ~~~~~~~~~^~~
src/lexer.c: In function ‘builProtectedSymbolFinalStates’:
src/lexer.c:110:34: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  110 |         protectedSymbolFinalState[i] = ID;
      |                                  ^
src/lexer.c:111:32: warning: ‘sizeof’ on array function parameter ‘protectedSymbolFinalState’ will return size of ‘char *’ [-Wsizeof-array-argument]
  111 |     for(char i = 0; i < sizeof protectedSymbolFinalState; i++)
      |                                ^~~~~~~~~~~~~~~~~~~~~~~~~
src/lexer.c:104:43: note: declared here
  104 | void builProtectedSymbolFinalStates( char protectedSymbolFinalState[NUMBER_OF_STATES_PROTECTED_SYMBOLS] ){
      |                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/lexer.c:112:41: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  112 |         protectedSymbolFinalState[finals[i]] = classes[i];
      |                                         ^
src/lexer.c:112:41: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  112 |         protectedSymbolFinalState[finals[i]] = classes[i];
      |                                   ~~~~~~^~~
src/lexer.c:112:55: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  112 |         protectedSymbolFinalState[finals[i]] = classes[i];
      |                                                       ^
src/lexer.c: In function ‘buildTransitionMatrix’:
src/lexer.c:127:29: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  127 |             transitionMatrix[i][j] = -1;
      |                             ^
src/lexer.c:127:32: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  127 |             transitionMatrix[i][j] = -1;
      |                                ^
src/lexer.c:134:28: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  134 |         transitionMatrix[0][i] = 1;
      |                            ^
src/lexer.c:135:28: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  135 |         transitionMatrix[1][i] = 1;
      |                            ^
src/lexer.c:138:28: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  138 |         transitionMatrix[0][i] = 1;
      |                            ^
src/lexer.c:139:28: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  139 |         transitionMatrix[1][i] = 1;
      |                            ^
src/lexer.c:142:28: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  142 |         transitionMatrix[1][i] = 1;
      |                            ^
src/lexer.c:149:28: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  149 |         transitionMatrix[0][i] = 6;     // integer part, first number
      |                            ^
src/lexer.c:150:28: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  150 |         transitionMatrix[4][i] = 6;     // integer part, first number after signal
      |                            ^
src/lexer.c:151:28: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  151 |         transitionMatrix[6][i] = 6;     // integer part, following numbers
      |                            ^
src/lexer.c:152:28: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  152 |         transitionMatrix[8][i] = 10;    // first number after decimal place
      |                            ^
src/lexer.c:153:29: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  153 |         transitionMatrix[10][i] = 10;   // following number after decimal place
      |                             ^
src/lexer.c: In function ‘nextToken’:
src/lexer.c:192:36: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  192 |     while( !lexer->finalState[lexer->curState] ) {
      |                               ~~~~~^~~~~~~~~~
src/lexer.c:204:56: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  204 |             *tokenClass = lexer->finalStateClass[ lexer->curState ];
      |                                                   ~~~~~^~~~~~~~~~
src/lexer.c:212:56: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  212 |         lexer->curState = lexer->transitionMatrix[lexer->curState][c];
      |                                                   ~~~~~^~~~~~~~~~
src/lexer.c:212:67: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  212 |         lexer->curState = lexer->transitionMatrix[lexer->curState][c];
      |                                                                   ^
src/lexer.c:228:5: warning: implicit declaration of function ‘identifyTokenClass’ [-Wimplicit-function-declaration]
  228 |     identifyTokenClass( lexer, buffer, tokenClass );
      |     ^~~~~~~~~~~~~~~~~~
src/lexer.c: At top level:
src/lexer.c:233:6: warning: conflicting types for ‘identifyTokenClass’
  233 | void identifyTokenClass( Lexer* lexer, String* buffer, int* tokenClass, bool isEOF ){
      |      ^~~~~~~~~~~~~~~~~~
src/lexer.c:228:5: note: previous implicit declaration of ‘identifyTokenClass’ was here
  228 |     identifyTokenClass( lexer, buffer, tokenClass );
      |     ^~~~~~~~~~~~~~~~~~
src/lexer.c: In function ‘identifyTokenClass’:
src/lexer.c:235:48: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  235 |     *tokenClass = lexer->finalStateClass[ lexer->curState ];
      |                                           ~~~~~^~~~~~~~~~
src/lexer.c:240:20: error: ‘sourceCode’ undeclared (first use in this function)
  240 |             fseek( sourceCode, 0, SEEK_END ); // retreat
      |                    ^~~~~~~~~~
src/lexer.c:240:20: note: each undeclared identifier is reported only once for each function it appears in
src/lexer.c: At top level:
src/lexer.c:251:5: error: conflicting types for ‘lookUpProtectedSymbol’
  251 | int lookUpProtectedSymbol( String* buffer, Lexer* lexer ) {
      |     ^~~~~~~~~~~~~~~~~~~~~
In file included from src/lexer.c:7:
src/../header/lexer.h:52:5: note: previous declaration of ‘lookUpProtectedSymbol’ was here
   52 | int lookUpProtectedSymbol( String* buffer );
      |     ^~~~~~~~~~~~~~~~~~~~~
src/lexer.c: In function ‘lookUpProtectedSymbol’:
src/lexer.c:254:64: warning: array subscript has type ‘char’ [-Wchar-subscripts]
  254 |         state = lexer->protectedSymbolMatrix[state][buffer->str[i]];
      |                                                     ~~~~~~~~~~~^~~
make: *** [Makefile:35: build/lexer.o] Error 1